<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--

    Copyright 2008-2017 Qualogy Solutions B.V.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    	http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<statements xmlns="http://qafe.com/schema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://qafe.com/schema http://www.qafe.com/schema/application-statements.xsd">
  <select id="PRO024__CGFK$TAB7_RIV_SCO_CODE_SELECT_LOOKUPTYPE" sql="" table="">SELECT SCO_CODE RIV_SCO_CODE  FROM STATUS_CODES</select>
  <select id="PRO024_WINDOW_SELECT_LOVTYPE_LOV_CGFK$TAB7_RIV_SCO_CODE" sql="" table="">SELECT SCO_CODE TAB7$RIV_SCO_CODE	 FROM STATUS_CODES WHERE ID = :RIV_SCO_CODE</select>
  <select id="PRO024__CGFK$TAB_AUS_AUS_AUT_FAR_CODE_SELECT_LOOKUPTYPE" sql="" table="">SELECT L_AUT.AUT_FAR_CODE AUS_AUT_FAR_CODE   ,L_AUT.AUT_FAO_CODE AUT_FAO_CODE  ,L_AUT.AUT_FAR_CODE AUT_FAR_CODE  ,L_AUT.AUT_FORMAT_IND AUT_FORMAT_IND  ,L_AUT.AUT_USAGE AUT_USAGE  ,L_AUT.AUT_ALLOW_END_IND AUT_ALLOW_END_IND  ,L_AUT.AUT_FAO_CODE AUS_AUT_FAO_CODE FROM ADDRESS_USAGE_TYPES L_AUT WHERE (( (:SYSTEM.MODE = 'ENTER-QUERY') AND L_AUT.AUT_FAO_CODE = :PARAMETER.TEMPLATE_PARAM_4 ) OR ((:SYSTEM.MODE = 'NORMAL') )) ORDER BY L_AUT.AUT_FAO_CODE ASC  ,L_AUT.AUT_FAR_CODE ASC  ,L_AUT.AUT_FORMAT_IND ASC  ,L_AUT.AUT_USAGE ASC  ,L_AUT.AUT_ALLOW_END_IND ASC</select>
  <select id="PRO024_WINDOW_SELECT_LOVTYPE_LOV_CGFK$TAB_AUS_AUS_AUT_FAR_CODE" sql="" table="">SELECT L_AUT.AUT_FAR_CODE TAB_AUS$AUS_AUT_FAR_CODE	, L_AUT.AUT_FORMAT_IND TAB_AUS$AUT_FORMAT_IND	, L_AUT.AUT_FAO_CODE TAB_AUS$AUS_AUT_FAO_CODE	 FROM ADDRESS_USAGE_TYPES L_AUT WHERE (( (:SYSTEM.MODE = 'ENTER-QUERY') AND L_AUT.AUT_FAO_CODE = :PARAMETER.TEMPLATE_PARAM_4 ) OR ((:SYSTEM.MODE = 'NORMAL') ))  WHERE ID = :AUS_AUT_FAR_CODE</select>
  <select id="PRO024__CGFK$TAB4_PTV_PTY_CODE_SELECT_LOOKUPTYPE" sql="" table="">SELECT L_PROPERTY_TYPE_VALUES.PTV_PTY_CODE PTV_PTY_CODE   ,L_PROPERTY_TYPE_VALUES.PTV_USAGE_IND L_PTV_PTV_USAGE_IND  ,L_PROPERTY_TYPE_VALUES.PTV_PST_FRV_CODE PTV_PST_FRV_CODE  ,L_PROPERTY_TYPE_VALUES.PTV_CURRENT_IND L_PTV_PTV_CURRENT_IND  ,L_PROPERTY_TYPE_VALUES.PTV_REFNO PRO_HOU_PTV_REFNO FROM PROP_TYPE_VALUES L_PROPERTY_TYPE_VALUES</select>
  <select id="PRO024_WINDOW_SELECT_LOVTYPE_LOV_CGFK$TAB4_PTV_PTY_CODE" sql="" table="">SELECT L_PROPERTY_TYPE_VALUES.PTV_PTY_CODE TAB4$PTV_PTY_CODE	, L_PROPERTY_TYPE_VALUES.PTV_PST_FRV_CODE TAB4$PTV_PST_FRV_CODE	, L_PROPERTY_TYPE_VALUES.PTV_REFNO TAB4$PRO_HOU_PTV_REFNO	 FROM PROP_TYPE_VALUES L_PROPERTY_TYPE_VALUES WHERE ID = :PTV_PTY_CODE</select>
  <select id="PRO024__CGFK$TAB1_HPS_HRV_PRR_CODE_SELECT_LOOKUPTYPE" sql="" table="">SELECT FRV_CODE HPS_HRV_PRR_CODE  FROM HRV_PROP_REOPEN_REASONS</select>
  <select id="PRO024_WINDOW_SELECT_LOVTYPE_LOV_CGFK$TAB1_HPS_HRV_PRR_CODE" sql="" table="">SELECT FRV_CODE TAB1$HPS_HRV_PRR_CODE	 FROM HRV_PROP_REOPEN_REASONS WHERE ID = :HPS_HRV_PRR_CODE</select>
  <select id="PRO024__CGFK$MASTER_PTV_PTY_CODE_SELECT_LOOKUPTYPE" sql="" table="">SELECT L_PTV.PTV_PTY_CODE PTV_PTY_CODE   ,L_PTV.PTV_PST_FRV_CODE PTV_PST_FRV_CODE  ,L_PTV.PTV_REFNO PRO_HOU_PTV_REFNO  ,L_PTV.PTV_USAGE_IND L_PTV_PTV_USAGE_IND  ,L_PTV.PTV_CURRENT_IND L_PTV_PTV_CURRENT_IND FROM PROP_TYPE_VALUES L_PTV</select>
  <select id="PRO024_WINDOW_SELECT_LOVTYPE_LOV_CGFK$MASTER_PTV_PTY_CODE" sql="" table="">SELECT L_PTV.PTV_PTY_CODE MASTER$PTV_PTY_CODE	, L_PTV.PTV_PST_FRV_CODE MASTER$PTV_PST_FRV_CODE	, L_PTV.PTV_REFNO MASTER$PRO_HOU_PTV_REFNO	, L_PTV.PTV_USAGE_IND MASTER$L_PTV_PTV_USAGE_IND	, L_PTV.PTV_CURRENT_IND MASTER$L_PTV_PTV_CURRENT_IND	 FROM PROP_TYPE_VALUES L_PTV WHERE ID = :PTV_PTY_CODE</select>
  <select id="PRO024__RUNTIME_LOV_SELECT_LOOKUPTYPE" sql="" table="">SELECT 'X' COL1, 'X' COL2, 'X' COL3, 'X' COL4, 'X' COL5, 'X' COL6, 'X' COL7, 'X' COL8, 'X' COL9, 'X' COL10 FROM DUAL</select>
  <select id="PRO024_WINDOW_MASTER_SELECT_BASETYPE_PROPERTIES" sql="" table="">SELECT * FROM PROPERTIES</select>
  <update id="PRO024_WINDOW_MASTER_UPDATE_BASETYPE_PROPERTIES" table="PROPERTIES"/>
  <select id="PRO024_WINDOW_PROPERTY_ELEMENTS_TAB_SELECT_BASETYPE_PROPERTY_ELEMENTS_VIEW" sql="" table="">SELECT * FROM PROPERTY_ELEMENTS_VIEW</select>
  <update id="PRO024_WINDOW_PROPERTY_ELEMENTS_TAB_UPDATE_BASETYPE_PROPERTY_ELEMENTS_VIEW" table="PROPERTY_ELEMENTS_VIEW"/>
  <select id="PRO024_WINDOW_TAB1_SELECT_BASETYPE_HOU_PROP_STATUSES" sql="" table="">SELECT * FROM HOU_PROP_STATUSES ORDER BY HPS_START_DATE DESC</select>
  <update id="PRO024_WINDOW_TAB1_UPDATE_BASETYPE_HOU_PROP_STATUSES" table="HOU_PROP_STATUSES"/>
  <select id="PRO024_WINDOW_TAB2_SELECT_BASETYPE_TCY_THO_VIEW" sql="" table="">SELECT * FROM TCY_THO_VIEW WHERE ( TCY_THO_VIEW.TTV_THO_PRO_REFNO = :MASTER.PRO_REFNO ) ORDER BY TTV_TCY_ACT_START_DATE DESC</select>
  <update id="PRO024_WINDOW_TAB2_UPDATE_BASETYPE_TCY_THO_VIEW" table="TCY_THO_VIEW"/>
  <select id="PRO024_WINDOW_TAB3_SELECT_BASETYPE_PROPERTY_MOVEMENT_AUDITS_VIEW" sql="" table="">SELECT * FROM PROPERTY_MOVEMENT_AUDITS_VIEW</select>
  <update id="PRO024_WINDOW_TAB3_UPDATE_BASETYPE_PROPERTY_MOVEMENT_AUDITS_VIEW" table="PROPERTY_MOVEMENT_AUDITS_VIEW"/>
  <select id="PRO024_WINDOW_TAB4_SELECT_BASETYPE_PROPERTIES" sql="" table="">SELECT * FROM PROPERTIES WHERE ( PROPERTIES.PRO_HOU_PARENT_PRO_REFNO = :MASTER.PRO_REFNO )</select>
  <update id="PRO024_WINDOW_TAB4_UPDATE_BASETYPE_PROPERTIES" table="PROPERTIES"/>
  <select id="PRO024_WINDOW_TAB_AUS_SELECT_BASETYPE_ADDRESS_USAGES" sql="" table="">SELECT * FROM ADDRESS_USAGES WHERE AUS_RAC_ACCNO IS NULL  AND ( ADDRESS_USAGES.AUS_AUT_FAO_CODE = NVL( :PARAMETER.TEMPLATE_PARAM_4, ADDRESS_USAGES.AUS_AUT_FAO_CODE) AND ADDRESS_USAGES.AUS_OBJECT_REFERENCE = NVL( :PARAMETER.TEMPLATE_PARAM_5, ADDRESS_USAGES.AUS_OBJECT_REFERENCE) ) AND EXISTS (SELECT 1 FROM ADDRESS_USAGE_TYPES L_AUT WHERE (ADDRESS_USAGES.AUS_AUT_FAO_CODE = L_AUT.AUT_FAO_CODE ) AND (ADDRESS_USAGES.AUS_AUT_FAR_CODE = L_AUT.AUT_FAR_CODE ) AND L_AUT.AUT_FAO_CODE = :PARAMETER.TEMPLATE_PARAM_4 ) ORDER BY AUS_AUT_FAR_CODE  ,AUS_START_DATE DESC</select>
  <update id="PRO024_WINDOW_TAB_AUS_UPDATE_BASETYPE_ADDRESS_USAGES" table="ADDRESS_USAGES"/>
  <select id="PRO024_WINDOW_TAB6_SELECT_BASETYPE_OOF_NOF_VIEW" sql="" table="">SELECT * FROM OOF_NOF_VIEW WHERE ( OOF_NOF_VIEW.OOF_PRO_REFNO = :MASTER.PRO_REFNO )</select>
  <update id="PRO024_WINDOW_TAB6_UPDATE_BASETYPE_OOF_NOF_VIEW" table="OOF_NOF_VIEW"/>
  <select id="PRO024_WINDOW_TAB7_SELECT_BASETYPE_REPAIRS_INQUIRY_VIEW" sql="" table="">SELECT * FROM REPAIRS_INQUIRY_VIEW WHERE ( REPAIRS_INQUIRY_VIEW.RIV_PRO_REFNO = :MASTER.PRO_REFNO )</select>
  <update id="PRO024_WINDOW_TAB7_UPDATE_BASETYPE_REPAIRS_INQUIRY_VIEW" table="REPAIRS_INQUIRY_VIEW"/>
  <select id="PRO024_WINDOW_TAB8_SELECT_BASETYPE_HPM_INQUIRY_VIEW" sql="" table="">SELECT * FROM HPM_INQUIRY_VIEW WHERE ( HPM_INQUIRY_VIEW.HPMIV_PRO_AUN_CODE = TO_CHAR(:MASTER.PRO_REFNO) AND HPM_INQUIRY_VIEW.HPMIV_PRO_AUN_TYPE_IND = 'P' ) ORDER BY HPMIV_REFERENCE  ,HPMIV_OBJ_TYPE</select>
  <update id="PRO024_WINDOW_TAB8_UPDATE_BASETYPE_HPM_INQUIRY_VIEW" table="HPM_INQUIRY_VIEW"/>

  <call id="PRO024_WINDOW_MASTER_D_ADDRESS_FORMULA" sql="{? = call S_PRO_VIEW.GET_ADDRESS ( 'PRO','PHYSICAL', :MASTER_PRO_REFNO )}"/>   
  
  <call id="PRO024_WINDOW_MASTER_D_NOTEPAD_FORMULA" sql="S_NOTEPADS.NOTEPADS_EXIST ( :MASTER.REUSABLE_REFNO )"/>
  <call id="PRO024_WINDOW_MASTER_D_HPS_HPC_CODE_FORMULA" sql="S_HOU_PROP_STATUSES.GET_CURRENT_STATUS ( :MASTER.PRO_REFNO )"/>
  <call id="PRO024_WINDOW_MASTER_D_VIN_VST_CODE_FORMULA" sql="S_HOU_PROPERTIES.GET_VST_FOR_PROPERTY ( :MASTER.PRO_REFNO )"/>
  <call id="PRO024_WINDOW_MASTER_D_BRUTO_HUUR_FORMULA" sql="EAL_HUURBEREKENING.F_GET_RC_VGE_BH_BEDRAG&amp;#10;	             (  :MASTER.PRO_REFNO&amp;#10;                                , NULL&amp;#10;                                ,  'VGE'&amp;#10;                                ,  NULL&amp;#10;                                ,  SYSDATE&amp;#10;                                ,  NULL&amp;#10;                                )"/>
  <call id="PRO024_WINDOW_MASTER_D_NETTO_HUUR_FORMULA" sql="EAL_HUURBEREKENING.F_GET_RC_VGE_NH_BEDRAG&amp;#10;	             (  :MASTER.PRO_REFNO&amp;#10;                                , NULL&amp;#10;                                ,  'VGE'&amp;#10;                                ,  NULL&amp;#10;                                ,  SYSDATE&amp;#10;                                ,  NULL&amp;#10;                                )"/>
  <call id="PRO024_WINDOW_MASTER_D_GD_HUUR_FORMULA" sql="EAL_HUURBEREKENING.F_GET_RC_VGE_SK_BEDRAG&amp;#10;	             (  :MASTER.PRO_REFNO&amp;#10;                                , NULL&amp;#10;                                ,  'VGE'&amp;#10;                                ,  NULL&amp;#10;                                ,  SYSDATE&amp;#10;                                ,  NULL&amp;#10;                                )"/>
  <call id="PRO024_WINDOW_MASTER_D_SUBS_HUUR_FORMULA" sql="EAL_HUURBEREKENING.F_GET_RC_VGE_SH_BEDRAG&amp;#10;	             (  NULL&amp;#10;                                , :MASTER.PRO_REFNO&amp;#10;                                ,  'VGE'&amp;#10;                                ,  NULL&amp;#10;                                ,  SYSDATE&amp;#10;                                ,  NULL&amp;#10;                                )"/>
  <call id="PRO024_WINDOW_PROPERTY_ELEMENTS_TAB_D_ELEMENT_GROUP_FORMULA" sql="S_ELEMENT_GROUP_MEMBERS.GET_ELE_GROUP_MEMBERS(:PROPERTY_ELEMENTS_TAB.PEL_ELE_CODE)"/>
  <call id="PRO024_WINDOW_TAB2_NOTEPAD_EXISTS_FORMULA" sql="PRO024.TCY_NOTEPAD_EXISTS(:TAB2.TTV_TCY_REUSABLE_REFNO)"/>
  <call id="PRO024_WINDOW_TAB4_D_ADDRESS_FORMULA" sql="S_PRO_VIEW.GET_ADDRESS ( 'PRO','PHYSICAL', :TAB4.PRO_REFNO )"/>
  <call id="PRO024_WINDOW_TAB4_D_NOTEPAD_FORMULA" sql="S_NOTEPADS.NOTEPADS_EXIST (S_PROPERTIES.GET_REUSABLE_REFNO( :TAB4.PRO_REFNO) )"/>
  <call id="PRO024_WINDOW_TAB4_D_HPS_HPC_CODE_FORMULA" sql="S_HOU_PROP_STATUSES.GET_CURRENT_STATUS ( :TAB4.PRO_REFNO )"/>
  <call id="PRO024_WINDOW_TAB_AUS_D_ADDRESS_FORMULA" sql="S_ADDRESSES.GET_ADDRESS(:TAB_AUS.AUS_ADR_REFNO,:TAB_AUS.ADR_TYPE)"/>
  <call id="PRO024_WINDOW_TAB6_D_ADDRESS_FORMULA" sql="S_APPLICATIONS.GET_ADDRESS(:TAB6.OOF_ALE_APP_REFNO)"/>
</statements>